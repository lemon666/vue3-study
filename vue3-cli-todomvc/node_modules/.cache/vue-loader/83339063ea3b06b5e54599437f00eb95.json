{"remainingRequest":"/Users/v_limeiwang/mygithub/vue3/demo/vue3-cli-demo/node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!/Users/v_limeiwang/mygithub/vue3/demo/vue3-cli-demo/src/components/Demo.vue?vue&type=style&index=0&lang=less","dependencies":[{"path":"/Users/v_limeiwang/mygithub/vue3/demo/vue3-cli-demo/src/components/Demo.vue","mtime":1593673031295},{"path":"/Users/v_limeiwang/mygithub/vue3/demo/vue3-cli-demo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/v_limeiwang/mygithub/vue3/demo/vue3-cli-demo/node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/v_limeiwang/mygithub/vue3/demo/vue3-cli-demo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/v_limeiwang/mygithub/vue3/demo/vue3-cli-demo/node_modules/_less-loader@6.1.3@less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/v_limeiwang/mygithub/vue3/demo/vue3-cli-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/v_limeiwang/mygithub/vue3/demo/vue3-cli-demo/node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5saXN0IHsKICBsaSB7CiAgICBoZWlnaHQ6IDUwMHB4OwogIH0KfQo="},{"version":3,"sources":["/Users/v_limeiwang/mygithub/vue3/demo/vue3-cli-demo/src/components/Demo.vue"],"names":[],"mappings":";AAkHA,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,EAAE;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACf;AACF","file":"/Users/v_limeiwang/mygithub/vue3/demo/vue3-cli-demo/src/components/Demo.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"demo\">\n    <div class=\"position\">\n      <div>滚动条Y坐标---{{top}}</div>\n      <div>鼠标X坐标---{{x}}</div>\n      <div>鼠标Y坐标---{{y}}</div>\n    </div>\n    <button @click=\"increase\">count is: {{count}} double is: {{double}}</button>\n    <h3>{{state.name}}</h3>\n\n    <ul class=\"list\">\n      <li>scrollY:{{top}}</li>\n      <li>li</li>\n      <li>li</li>\n      <li>li</li>\n      <li>li</li>\n      <li>li</li>\n      <li>li</li>\n      <li>li</li>\n      <li>li</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport {\n  ref,\n  reactive,\n  computed,\n  watchEffect,\n  watch,\n  readonly,\n  onMounted,\n  onUnmounted\n} from \"vue\";\nimport useMousePosition from \"../hooks/useMousePosition\";\n\n// vue2\n// export default {\n//     data() {},\n//     methods: {},\n//     computed: {},\n//     watch: {},\n// }\n\n// 特有逻辑函数剥离 vue3.0的好处\nfunction useScroll() {\n  // 实时获取滚动条位置\n  const top = ref(0);\n\n  function update() {\n    top.value = window.scrollY;\n  }\n  onMounted(() => {\n    window.addEventListener(\"scroll\", update);\n  });\n  onUnmounted(() => {\n    window.removeEventListener(\"scroll\", update);\n  });\n\n  return {\n    top\n  };\n}\n\nexport default {\n  name: \"Demo\",\n  components: {},\n\n  setup() {\n    let { top } = useScroll();\n    let { x, y } = useMousePosition();\n    let count = ref(0);\n    let state = reactive({\n      name: \"美旺\",\n      age: 26,\n      sex: \"男\"\n    });\n    const copy = readonly(state);\n\n    let increase = () => {\n      count.value++;\n    };\n\n    let double = computed(() => count.value * 2);\n\n    watch(double, (oldVal, newVal) => {\n      console.log(\"watch:\", oldVal, newVal);\n    });\n\n    // 在反应性地跟踪其依赖关系时立即运行一个函数，并在依赖关系发生变化时重新运行它。\n    watchEffect(() => {\n      //   console.log(\"watchEffect:\", copy.age);\n      console.log(\"watchEffect:\", count.value);\n    });\n\n    // Set operation on key \"count\" failed: target is readonly.\n    // copy.count++;\n\n    return {\n      count,\n      double,\n      state,\n      increase,\n      x,\n      y,\n      copy,\n      top\n    };\n  }\n};\n</script>\n\n<style lang=\"less\">\n.list {\n  li {\n    height: 500px;\n  }\n}\n</style>\n"]}]}